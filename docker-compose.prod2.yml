services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: laravel_app_slave
    working_dir: /var/www
    networks:
      - laravel
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  webserver:
    image: nginx:1.26.0-alpine
    container_name: nginx_slave
    ports:
      - "8081:80"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app
    networks:
      - laravel
    restart: unless-stopped

  db:
    image: mariadb:latest
    container_name: mariadb_slave
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata_slave:/var/lib/mysql
      - /etc/scripts:/docker-entrypoint-initdb.d
    ports:
      - "3307:3306"
    networks:
      - laravel
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u ${DB_USERNAME} -p${DB_PASSWORD} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: ["--log-bin=mysql-bin", "--binlog-format=ROW", "--server-id=2"]
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_slave
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "8082:80"
    depends_on:
      - db
    networks:
      - laravel
    restart: unless-stopped

networks:
  laravel:

volumes:
  dbdata_slave:
